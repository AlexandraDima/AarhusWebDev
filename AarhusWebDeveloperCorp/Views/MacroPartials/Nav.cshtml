@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web



@{
    var root = Model.Content.Root();
    var selection = root.Children.Where(x => x.IsVisible())
                    .ToArray();
}

<ul class="navbar-nav ml-auto">

    <li class="nav-item @(Model.Content.Name == root.Name ? "active" : null) ">
        <a class="nav-link" href="@root.Url">@root.Name</a>
    </li>

    @if (selection.Length > 0)
    {

        foreach (var menuItem in selection)
        {


            if (Umbraco.MemberHasAccess(menuItem.Path))
            {

                //Children of the root
                if (menuItem.Children().Where(x => x.IsVisible()).Count() > 0)
                {

                    <li class="nav-item dropdown @(menuItem.IsAncestorOrSelf(Model.Content) ? "selected" : null)">
                        <a class="nav-link dropdown-toggle" href="@menuItem.Url" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @menuItem.Name
                        </a>

                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @foreach (var subItem in menuItem.Children().Where(x => x.IsVisible()))
                            {

                                if (Umbraco.MemberHasAccess(subItem.Path))
                                {


                                    // if document type is ProjectItem
                                    if (subItem.IsDocumentType("ProjectItem"))
                                    {
                                        //and if Project status is completed
                                        if (subItem.HasValue("projectStatus") && subItem.GetProperty("projectStatus").Value<string>() == "Completed" && subItem.IsVisible())
                                        {
                                        <a class="dropdown-item" href="@subItem.Url">@subItem.Name</a>
                                        }
                                    }

                                    //else display subItem as before
                                    else
                                    {
                                    <a class="dropdown-item" href="@subItem.Url">@subItem.Name</a>
                                    }

                                }
                            }


                        </div>

                    </li>
                }
                else
                {
                    <li class="nav-item @(menuItem.IsAncestorOrSelf(Model.Content) ? "active" : null)">
                        <a class="nav-link" href="@menuItem.Url">@menuItem.Name</a>
                    </li>

                }

            }
        }

    }
</ul>
